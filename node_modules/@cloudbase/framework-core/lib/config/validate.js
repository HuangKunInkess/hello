"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validate = void 0;
/**
 * Tencent is pleased to support the open source community by making CloudBaseFramework - 云原生一体化部署工具 available.
 *
 * Copyright (C) 2020 THL A29 Limited, a Tencent company.  All rights reserved.
 *
 * Please refer to license text included with this package for license details.
 */
const ajv_1 = __importDefault(require("ajv"));
// eslint-disable-next-line @typescript-eslint/no-require-imports
const localize = require('ajv-i18n');
// eslint-disable-next-line @typescript-eslint/no-require-imports
const schema = require('../../assets/cloudbaserc-json-schema');
const ajv = new ajv_1.default({ allErrors: false });
const validateUseAjv = ajv.compile(schema);
function validate(data) {
    const result = validateUseAjv(data);
    localize.zh(validateUseAjv.errors);
    const errors = validateUseAjv.errors;
    const errorText = result
        ? ''
        : `具体错误信息如下:

${errors === null || errors === void 0 ? void 0 : errors.map((e) => `  ❌ cloudbaserc${e.dataPath} ${e.message}`).join('\n')}

请修复后重新执行部署

建议使用 VS Code 编辑 cloudbaserc.json 文件

可以根据 cloudbaserc 配置规范实时校验和高亮显示错误信息
`;
    return {
        result,
        errors,
        errorText,
    };
}
exports.validate = validate;
