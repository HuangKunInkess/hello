"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.reportCloudBaseCIResultCallback = exports.createAndDeployCloudBaseProject = exports.describeCloudBaseProjectLatestVersionList = void 0;
/**
 * Tencent is pleased to support the open source community by making CloudBaseFramework - 云原生一体化部署工具 available.
 *
 * Copyright (C) 2020 THL A29 Limited, a Tencent company.  All rights reserved.
 *
 * Please refer to license text included with this package for license details.
 */
const _1 = require(".");
/**
 * 查询项目列表
 */
function describeCloudBaseProjectLatestVersionList({ PageSize = 100, ProjectName, Offset = 0, }) {
    return __awaiter(this, void 0, void 0, function* () {
        return _1.CloudApi.tcbService.request('DescribeCloudBaseProjectLatestVersionList', {
            PageSize,
            ProjectName,
            Offset,
        });
    });
}
exports.describeCloudBaseProjectLatestVersionList = describeCloudBaseProjectLatestVersionList;
/**
 * 创建一次部署
 */
function createAndDeployCloudBaseProject({ Name, Parameters, RcJson, Source, AddonConfig, NetworkConfig, Tags, }) {
    return __awaiter(this, void 0, void 0, function* () {
        return _1.CloudApi.tcbService.request('CreateAndDeployCloudBaseProject', {
            Name,
            Parameters,
            RcJson,
            Source,
            AddonConfig,
            NetworkConfig,
            Tags,
            Type: 'framework-oneclick-local',
        });
    });
}
exports.createAndDeployCloudBaseProject = createAndDeployCloudBaseProject;
/**
 * 上报部署状态
 */
function reportCloudBaseCIResultCallback({ ciId, extensionId, failReason, status, buildLog, failType, }) {
    return _1.CloudApi.tcbService.request('CloudBaseCIResultCallback', {
        CIID: ciId,
        TraceId: ciId,
        ExtensionID: extensionId,
        FailReason: failReason,
        Status: status,
        BuildLog: buildLog,
        FailType: failType,
    });
}
exports.reportCloudBaseCIResultCallback = reportCloudBaseCIResultCallback;
