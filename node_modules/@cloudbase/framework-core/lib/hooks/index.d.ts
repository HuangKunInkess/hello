declare type IHookName = 'preDeploy' | 'postCompile' | 'postDeploy';
interface IHooksConfig {
    preDeploy?: IHooksExecCommand;
    postCompile?: IHooksCallFunction;
    postDeploy?: IHooksCallFunction;
}
interface IHooksExecCommand {
    type: 'execCommand';
    commands: string[];
}
interface IHooksCallFunction {
    type: 'callFunction';
    functions: ICallFunctionConfig[];
}
interface ICallFunctionConfig {
    functionName: string;
    params?: any;
}
export default class Hooks {
    hooksConfig: IHooksConfig;
    projectPath: string;
    private sam;
    constructor(hooksConfig: IHooksConfig, projectPath: string);
    callHook(hookName: IHookName): Promise<void>;
    genSAM(): Record<string, any>;
    private execCommand;
    private callFunction;
}
export {};
//# sourceMappingURL=index.d.ts.map