import { cosmiconfig } from './explorer';
import { CosmiconfigResult } from './explorer/types';
import { CloudBaseError } from '../error';
import { checkReadable } from '../fs';

const MODULE_NAME = 'cloudbase';
const getSearchPlaces = (moduleName: string) => [
    'package.json',
    `${moduleName}rc`,
    `${moduleName}rc.json`,
    `${moduleName}rc.yaml`,
    `${moduleName}rc.yml`,
    `${moduleName}rc.js`,
    `${moduleName}.config.js`
];

export interface LoadOptions {
    // 指定搜索路径
    searchFrom?: string
    // 指定配置文件路径
    configPath?: string
    // 模块名
    moduleName?: string
}

/**
 * 搜索指定配置文件，返回包含路径等信息
 */
export async function searchConfig(
    dest: string,
    moduleName = MODULE_NAME
): Promise<CosmiconfigResult> {
    const explorer = cosmiconfig(moduleName, {
        // 不向上搜索
        stopDir: process.cwd(),
        searchPlaces: getSearchPlaces(moduleName)
    });

    // 搜索配置文件
    try {
        return explorer.search(dest || process.cwd());
    } catch (e) {
        return null;
    }
}

/**
 * 搜索或指定配置文件路径
 * 加载配置文件内容
 */
export async function loadConfig(options: LoadOptions = {}) {
    const { moduleName = MODULE_NAME, configPath, searchFrom } = options;
    const explorer = cosmiconfig(moduleName, {
        // 不向上搜索
        stopDir: process.cwd(),
        searchPlaces: getSearchPlaces(moduleName)
    });

    // 从指定路径加载配置文件
    if (configPath) {
        // 校验路径是否存在
        checkReadable(configPath, true);
        try {
            const result = await explorer.load(configPath);
            if (!result) return null;
            const { config, filepath, isEmpty } = result;
            return config;
        } catch (e) {
            throw new CloudBaseError('配置文件解析失败，请检查你的配置文件格式是否正确！', {
                original: e
            });
        }
    }

    // 搜索配置文件
    try {
        const result = await searchConfig(searchFrom || process.cwd(), moduleName);
        if (!result) return null;
        const { config, filepath, isEmpty } = result;
        return config;
    } catch (e) {
        throw new CloudBaseError('配置文件解析失败，请检查你的配置文件格式是否正确！', {
            original: e
        });
    }
}
