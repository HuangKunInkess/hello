"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nilCache = exports.memoryCache = exports.Cache = void 0;
class Entry {
    constructor(key, value, now, maxAge) {
        this.key = key;
        this.value = value;
        this.now = now;
        this.maxAge = maxAge;
    }
    isExpired() {
        const now = Date.now();
        return this.now + this.maxAge <= now;
    }
}
class Cache {
    constructor(nil) {
        this.store = new Map();
        this.nil = false;
        this.nil = nil;
    }
    set(key, value, maxAge = 0) {
        const now = maxAge ? Date.now() : 0;
        const entry = new Entry(key, value, now, maxAge);
        this.store.set(key, entry);
    }
    get(key) {
        const { nil } = this;
        const entry = this.store.get(key);
        if (!entry) {
            return nil ? Cache.NIL : null;
        }
        if (entry === null || entry === void 0 ? void 0 : entry.isExpired()) {
            return nil ? Cache.NIL : null;
        }
        return entry.value;
    }
}
exports.Cache = Cache;
Cache.NIL = Symbol('NIL');
exports.memoryCache = new Cache();
exports.nilCache = new Cache(true);
